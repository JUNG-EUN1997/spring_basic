//java빌드에 필요한 플러그인 설정
plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'

//	의존성관리 툴의 버전을 명시
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.beyond'
//빌드된 jar파일의 버전명, snapshot : 실험용버전
version = '0.0.1-SNAPSHOT' // 우리가 진행하는 프로젝트의 버전

java {
	sourceCompatibility ='11'
}



repositories {
/*
maven이라는 레파지토리라는 레파지토리를 쓰고있다.
	> 인터넷이 가능해야 메이븐레파지토리를 갖고올 수 있다.
	> 일종의 구글 드라이브로 생각하면 된다.
	> 우분투로 비교해보면 apt-get 으로 생각해보면 된다. >> 패키지 설치용 명령어


의존성을 가져오는 대상 저장소 (repository)
내부망에서 인터넷을 사용하기 불가한 경우에는 nexus(설치형)와 같은 repository를 사용하기도 함 :: 내부 보안이 강한 경우
	> 사내에 있는 드라이브에서 당겨온다
	> 버전이 업데이트 될 때마다 사람이 일일히 갖고와야한다. :: 엄청 노가다성 작업이다.
*/
	mavenCentral()
}

// starter 종속성은 일반적으로 별도의 버전관리가 필요없고, 버전에 따라 호환성을 맞춰줌
dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}